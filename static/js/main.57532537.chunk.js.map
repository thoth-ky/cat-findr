{"version":3,"sources":["components/FavsComponent/reducers/favCatReducer.js","components/HomeComponent/reducers/catsReducer.js","components/SearchComponent/reducer/breedsReducer.js","components/SearchComponent/reducer/searchReducer.js","components/SearchComponent/reducer/categoriesReducer.js","store/mainReducer.js","store/initialState.js","store/store.js","components/shared/Loader.js","components/shared/Button.js","components/shared/cats/extras.js","components/shared/cats/catComponent.js","components/SearchComponent/partials/widgetDashboard.js","components/SearchComponent/partials/widgetCustomHook.js","utils/config.js","utils/helpers.js","utils/api.js","components/SearchComponent/partials/filterHooks.js","components/SearchComponent/actions/searchActions.js","components/SearchComponent/partials/filters.js","components/shared/StyledComponents.js","components/SearchComponent/Search.js","components/FavsComponent/FavsCustomHook.js","components/FavsComponent/actions/FavActions.js","components/FavsComponent/Favs.js","components/NavBarComponent/NavBar.js","components/HomeComponent/actions/HomeActions.js","components/HomeComponent/catsCustomHook.js","components/HomeComponent/Home.js","App.js","serviceWorker.js","index.js"],"names":["favCatReducer","state","action","type","payload","catsReducer","breedsReducer","searchReducer","categoriesReducer","mainReducer","cats","favCat","categories","searchResults","breeds","initialState","StateContext","createContext","useStore","useContext","Loader","msg","Card","Text","as","style","minHeight","textAlign","verticalAlign","lineHeight","defaultProps","ButtonComponent","buttonType","message","size","onClickEvent","name","Button","margin","width","variant","onClick","ExtraDetails","breed","breedID","id","origin","lifeSpan","life_span","adaptability","affectionLevel","affection_level","childFriendly","child_friendly","dogFriendly","dog_friendly","energyLevel","energy_level","grooming","key","ListGroup","Item","CatComponent","image","display","imgHeight","url","breedName","description","expand","displayBody","body","isEmpty","className","Img","height","src","objectFit","loader","Body","WidgetImagesDashboard","addToast","useToasts","favoriteImage","imageId","voteString","localStorage","getItem","setItem","appearance","autoDismiss","placement","WidgetCustomHook","overflow","flexDirection","flexWrap","justifyContent","map","padding","stringifyParams","params","string","Object","entries","forEach","elem","val","updateState","dispatch","getFromApi","path","actionData","config","fetch","method","headers","then","response","json","catch","error","console","FilterCustomHook","useState","orderOptions","setOrderOptions","typeOptions","setTypeOptions","categoryOptions","setCategoryOptions","breedOptions","setBreedOptions","order","updateOrder","updateType","category","updateCategory","updateBreed","useEffect","getBreedsAction","getCategoriesAction","selectFieldsFromObject","list","fields","resultList","element","option","push","searchImages","searchImagesAction","breed_ids","category_ids","mime_types","limit","breedOpts","categoryOpts","setFilterOptions","OptionComponent","value","SelectComponent","options","onChange","multiple","Form","Group","controlId","Label","Control","e","target","el","FiltersComponent","Row","Col","Container","styled","div","ButtonContainer","SearchComponent","fontSize","fontFamily","color","FavCatHook","favorites","setFavorites","currentIndex","setCurrentIndex","votes","split","favs","item","trim","Set","currentCatId","favID","getFavCatAction","has_breeds","navigateFavs","event","newIdx","length","FavsComponent","NavigationBar","Navbar","fixed","Brand","Link","to","alt","Nav","CatsCustomHook","currentImage","setCurrentImage","currentImageIndex","setCurrentImageIndex","fetchBatch","setFetchBacth","allCatsData","getRandomCatsAction","format","recordVote","VOTE_KEY","nextIndex","nextPhoto","HomeComponent","App","exact","component","Boolean","window","location","hostname","match","AppContainer","children","Provider","useReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57532537.chunk.js","sourcesContent":["\nconst favCatReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_FAV_CATS':\n      return { ...action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport {\n  favCatReducer,\n};\n","\nconst catsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_NEW_CATS':\n      return [...action.payload];\n\n\n    default:\n      return state;\n  }\n};\n\nexport {\n  catsReducer,\n};\n","\nconst breedsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_BREEDS':\n      return [...action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport {\n  breedsReducer as default,\n};\n","\nconst searchReducer = (state, action) => {\n  switch (action.type) {\n    case 'STORE_SEARCH_IMAGE_RESULTS':\n      return [...action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport {\n  searchReducer as default,\n};\n","\nconst categoriesReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_CATEGORIES':\n      return [...action.payload];\n\n    default:\n      return state;\n  }\n};\n\nexport {\n  categoriesReducer as default,\n};\n","import { favCatReducer } from '../components/FavsComponent/reducers';\nimport { catsReducer } from '../components/HomeComponent/reducers';\nimport { breedsReducer, searchReducer, categoriesReducer } from '../components/SearchComponent/reducer';\n\nconst mainReducer = ({\n  cats, favCat, categories, searchResults, breeds,\n}, action) => ({\n  cats: catsReducer(cats, action),\n  favCat: favCatReducer(favCat, action),\n  categories: categoriesReducer(categories, action),\n  searchResults: searchReducer(searchResults, action),\n  breeds: breedsReducer(breeds, action),\n});\n\nexport {\n  mainReducer,\n};\n","const initialState = {\n  cats: [],\n  favCat: {},\n  categories: [],\n  searchResults: [],\n  breeds: [],\n};\n\nexport { initialState };\n","import React, { createContext, useContext, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { mainReducer } from './mainReducer';\nimport { initialState } from './initialState';\n\n\nconst StateContext = createContext();\n\nconst StateProvider = ({ children }) => (\n  <StateContext.Provider value={useReducer(mainReducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\n// returns [state, dispatch]\nconst useStore = () => useContext(StateContext);\n\nStateProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport {\n  StateContext,\n  StateProvider,\n  useStore,\n};\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\n\nconst Loader = ({ msg }) => (\n  <Card.Text\n    as=\"div\"\n    style={{\n      minHeight: '500px', textAlign: 'center', verticalAlign: 'middle', lineHeight: '500px',\n    }}\n  >\n    <b>{msg}</b>\n  </Card.Text>\n);\n\nLoader.propTypes = {\n  msg: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  msg: 'Loading Image...',\n};\nexport default Loader;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\n\nfunction ButtonComponent({\n  buttonType, message, size, onClickEvent, name,\n}) {\n  return (\n    <Button\n      size={size}\n      style={{ margin: '10px', width: '200px' }}\n      variant={buttonType}\n      onClick={onClickEvent}\n      name={name}\n    >\n      {message}\n    </Button>\n  );\n}\n\n\nButtonComponent.propTypes = {\n  buttonType: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  onClickEvent: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\nexport {\n  ButtonComponent as default,\n};\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst ExtraDetails = (breed) => {\n  const {\n    id: breedID,\n    origin,\n    life_span: lifeSpan,\n    adaptability,\n    affection_level: affectionLevel,\n    child_friendly: childFriendly,\n    dog_friendly: dogFriendly,\n    energy_level: energyLevel,\n    grooming,\n  } = breed;\n  return (\n    <Card key={breedID}>\n      <ListGroup variant=\"flush\">\n        <ListGroup.Item>\n          Origin          :\n          {origin}\n        </ListGroup.Item>\n        <ListGroup.Item>\n          Life Span       :\n          {lifeSpan}\n        </ListGroup.Item>\n        <ListGroup.Item>\n          Dog Friendly    :\n          {dogFriendly}\n        </ListGroup.Item>\n        <ListGroup.Item>\n          Adaptability    :\n          {adaptability}\n        </ListGroup.Item>\n        <ListGroup.Item>\n          Child Friendly  :\n          {childFriendly}\n        </ListGroup.Item>\n        <ListGroup.Item>\n          Affection Level :\n          {affectionLevel}\n        </ListGroup.Item>\n        <ListGroup.Item>\n          Energy Level    :\n          {energyLevel}\n        </ListGroup.Item>\n        <ListGroup.Item>\n          Grooming        :\n          {grooming}\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\n\nexport { ExtraDetails as default };\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport isEmpty from 'is-empty';\nimport Img from 'react-image';\nimport PropTypes from 'prop-types';\nimport ExtraDetails from './extras';\nimport Loader from '../Loader';\n\n\nfunction CatComponent({\n  image, display, width, imgHeight,\n}) {\n  const {\n    id,\n    url,\n    breeds = [],\n  } = image;\n\n  const {\n    name: breedName = 'Not Available',\n    description = 'Not Available',\n  } = (breeds && breeds[0]) || {};\n\n\n  const { expand = false, body: displayBody } = display;\n\n  if (isEmpty(image)) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <Card style={{ width }} key={id} className=\"text-center\">\n      <Card.Img as={Img} variant=\"top\" height={imgHeight} src={url} style={{ objectFit: 'contain' }} loader={<Loader />} />\n      {displayBody && (\n      <Card.Body>\n        <Card.Text as=\"div\">\n          <b>Breed</b>\n          {' '}\n          :\n          {breedName}\n          <br />\n          <b>Description</b>\n          {' '}\n          :\n          <i>{description}</i>\n          {!isEmpty(breeds) && expand && <ExtraDetails breed={breeds[0]} />}\n        </Card.Text>\n      </Card.Body>\n      )}\n    </Card>\n  );\n}\n\nCatComponent.propTypes = {\n  image: PropTypes.shape({\n    id: PropTypes.string,\n    url: PropTypes.string,\n    breeds: PropTypes.array,\n  }).isRequired,\n  display: PropTypes.shape({\n    expand: PropTypes.bool,\n    body: PropTypes.bool,\n  }).isRequired,\n  width: PropTypes.string.isRequired,\n  imgHeight: PropTypes.string,\n};\n\nCatComponent.defaultProps = {\n  imgHeight: '500px',\n};\n\nexport { CatComponent as default };\n","import React from 'react';\nimport isEmpty from 'is-empty';\nimport WidgetCustomHook from './widgetCustomHook';\nimport { ButtonComponent, CatComponent, Loader } from '../../shared';\n\nfunction WidgetImagesDashboard() {\n  const {\n    searchResults,\n    display,\n    favoriteImage,\n  } = WidgetCustomHook();\n\n  if (isEmpty(searchResults)) {\n    return (\n      <Loader msg=\"No Image Result for set filters\" />\n    );\n  }\n\n  return (\n    <div\n      className=\"dashboard\"\n      style={{\n        height: '100%',\n        width: '100%',\n        overflow: 'scroll',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n      }}\n    >\n      {\n        searchResults.map((image) => (\n          <div style={{ padding: '1%' }} key={image.id}>\n            <CatComponent image={image} display={display} width=\"30rem\" imgHeight=\"300px\" />\n            <ButtonComponent\n              message=\"Fav-It\"\n              buttonType=\"success\"\n              size=\"lg\"\n              onClickEvent={() => favoriteImage(image.id)}\n              name=\"fav-it\"\n              id={image.id}\n              style={{ width: '100%' }}\n            />\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nexport {\n  WidgetImagesDashboard as default,\n};\n","import { useToasts } from 'react-toast-notifications';\nimport { useStore } from '../../../store/store';\n\nfunction WidgetCustomHook() {\n  const state = useStore()[0];\n  const { addToast } = useToasts();\n\n  const {\n    searchResults,\n  } = state;\n\n  const favoriteImage = (imageId) => {\n    const voteString = `${localStorage.getItem('LIKES')}, ${imageId}`;\n    localStorage.setItem('LIKES', voteString);\n    addToast('Favorited Image Successfully', {\n      appearance: 'success',\n      autoDismiss: true,\n      placement: 'top-center',\n    });\n  };\n\n\n  const display = { expand: false, body: false };\n\n  return {\n    searchResults,\n    display,\n    favoriteImage,\n  };\n}\n\nexport {\n  WidgetCustomHook as default,\n};\n","export default {\n  apiKey: '273d79e4-2c3b-4398-9354-1840ae02473a', // process.env.API_KEY,\n  apiUrl: 'https://api.thecatapi.com/v1', // process.env.API_URL,\n};\n","const stringifyParams = (params) => {\n  let string = '';\n  Object.entries(params).forEach((elem) => {\n    const [key, val] = elem;\n    string = `${string}${key}=${val}&`;\n  });\n  return string;\n};\n\nexport {\n  stringifyParams,\n};\n","import config from './config';\nimport { stringifyParams } from './helpers';\n\nconst updateState = (dispatch, action) => {\n  dispatch(action);\n};\n\nconst getFromApi = (path, dispatch, actionData, params = {}) => {\n  const url = `${config.apiUrl}${path}?${stringifyParams(params)}`;\n\n  fetch(url, {\n    method: 'GET',\n    headers: {\n      'x-api-key': config.apiKey,\n    },\n  })\n    .then((response) => response.json())\n    .then((payload) => {\n      const action = {\n        ...actionData,\n        payload,\n      };\n      updateState(dispatch, action);\n    })\n    // eslint-disable-next-line no-console\n    .catch((error) => console.error({ error }));\n};\n\nexport {\n  getFromApi,\n};\n","import { useEffect, useState } from 'react';\nimport { useStore } from '../../../store/store';\nimport {\n  getBreedsAction,\n  getCategoriesAction,\n  searchImagesAction,\n} from '../actions/searchActions';\n\nfunction FilterCustomHook() {\n  const [state, dispatch] = useStore();\n\n  const {\n    categories = [],\n    breeds = [],\n  } = state;\n\n  const [orderOptions, setOrderOptions] = useState([]);\n  const [typeOptions, setTypeOptions] = useState([]);\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [breedOptions, setBreedOptions] = useState([]);\n\n  const [order, updateOrder] = useState('Random');\n  const [type, updateType] = useState('Static');\n  const [category, updateCategory] = useState('');\n  const [breed, updateBreed] = useState('');\n\n  useEffect(() => {\n    getBreedsAction(dispatch);\n    getCategoriesAction(dispatch);\n  }, [dispatch]);\n\n  const selectFieldsFromObject = (list, fields, resultList) => {\n    list.forEach((element) => {\n      const option = [];\n      fields.forEach((key) => {\n        option.push(element[key]);\n      });\n      resultList.push(option);\n    });\n  };\n\n  const searchImages = () => {\n    const params = {\n      breed_ids: breed,\n      category_ids: category,\n      order,\n      mime_types: (type === 'Static') ? 'jpg,png' : 'gif',\n      size: 'med',\n      limit: 100,\n    };\n\n    searchImagesAction(dispatch, params);\n  };\n\n  const setFilterOptions = () => {\n    const breedOpts = [['', 'All']];\n    const categoryOpts = [['', 'All']];\n    selectFieldsFromObject(breeds, ['id', 'name'], breedOpts);\n    selectFieldsFromObject(categories, ['id', 'name'], categoryOpts);\n    const orderOpts = [['Randon', 'Random'], ['Desc', 'Desc'], ['Asc', 'Asc']];\n    const typeOpts = [['Static', 'Static'], ['Animated', 'Animated']];\n    setOrderOptions(orderOpts);\n    setTypeOptions(typeOpts);\n    setCategoryOptions(categoryOpts);\n    setBreedOptions(breedOpts);\n  };\n\n  useEffect(() => {\n    searchImages();\n    setFilterOptions();\n    // eslint-disable-next-line\n  }, [order, type, category, breed, breeds, categories, dispatch]);\n\n  return {\n    categories,\n    breeds,\n    orderOptions,\n    typeOptions,\n    categoryOptions,\n    breedOptions,\n    updateOrder,\n    updateType,\n    updateCategory,\n    updateBreed,\n  };\n}\n\n\nexport { FilterCustomHook };\n","import { getFromApi } from '../../../utils/api';\n\nfunction getBreedsAction(dispatch) {\n  const actionData = {\n    type: 'ADD_BREEDS',\n  };\n  getFromApi('/breeds', dispatch, actionData);\n}\n\nfunction getCategoriesAction(dispatch) {\n  const actionData = {\n    type: 'ADD_CATEGORIES',\n  };\n  getFromApi('/categories', dispatch, actionData);\n}\n\nfunction searchImagesAction(dispatch, params = {}) {\n  const actionData = {\n    type: 'STORE_SEARCH_IMAGE_RESULTS',\n  };\n  getFromApi('/images/search', dispatch, actionData, params);\n}\n\nexport {\n  getBreedsAction,\n  getCategoriesAction,\n  searchImagesAction,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport { FilterCustomHook } from './filterHooks';\n\nfunction OptionComponent({ option }) {\n  return (\n    <option value={option[0]}>\n      {option[1]}\n    </option>\n  );\n}\n\nfunction SelectComponent({\n  options, name, onChange, multiple,\n}) {\n  return (\n    <Form.Group controlId={name}>\n      <Form.Label>{name}</Form.Label>\n      <Form.Control as=\"select\" onChange={(e) => onChange(e.target.value)} multiple={multiple}>\n        {\n          options.map((el) => (<OptionComponent key={el[0]} option={el} />))\n        }\n      </Form.Control>\n    </Form.Group>\n\n  );\n}\n\nfunction FiltersComponent() {\n  const {\n    orderOptions,\n    typeOptions,\n    categoryOptions,\n    breedOptions,\n    updateOrder,\n    updateType,\n    updateCategory,\n    updateBreed,\n  } = FilterCustomHook();\n\n\n  return (\n    <Form className=\"filters\" style={{ width: '100%', height: '150px' }}>\n      <Form.Row>\n        <Col>\n          <SelectComponent options={orderOptions} onChange={updateOrder} name=\"Order\" />\n        </Col>\n        <Col>\n          <SelectComponent options={typeOptions} onChange={updateType} name=\"Type\" />\n        </Col>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <SelectComponent options={categoryOptions} onChange={updateCategory} name=\"Category\" />\n        </Col>\n        <Col>\n          <SelectComponent options={breedOptions} onChange={updateBreed} name=\"Breeds\" />\n        </Col>\n      </Form.Row>\n    </Form>\n  );\n}\n\nSelectComponent.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.any.isRequired,\n    ),\n  ).isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  multiple: PropTypes.bool,\n};\n\nSelectComponent.defaultProps = {\n  multiple: false,\n};\n\nOptionComponent.propTypes = {\n  option: PropTypes.arrayOf(\n    PropTypes.any.isRequired,\n  ).isRequired,\n};\n\n\nexport {\n  FiltersComponent as default,\n};\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  flex-direction: column;\n  justify-content: space-evenly;\n  width: 100%;\n`;\n\n\nconst ButtonContainer = styled.div`\njustify-content: space-between;\n`;\n\nexport {\n  Container,\n  ButtonContainer,\n};\n","import React from 'react';\nimport {\n  ImagesDashboard,\n  FilterComponent,\n} from './partials';\nimport { Container } from '../shared/StyledComponents';\n\n\nfunction SearchComponent() {\n  return (\n    <Container>\n      <div style={{ fontSize: '20px', fontFamily: 'Heebo' }}>\n        <b>Choose filters to use for searching for images</b>\n        <p>\n          If you like\n          {' '}\n          <b style={{ color: 'green' }}>Fav-It</b>\n        </p>\n      </div>\n      <FilterComponent />\n      <ImagesDashboard />\n    </Container>\n  );\n}\n\nexport { SearchComponent };\n","import { useEffect, useState } from 'react';\nimport isEmpty from 'is-empty';\nimport { getFavCatAction } from './actions/FavActions';\nimport { useStore } from '../../store/store';\n\nfunction FavCatHook() {\n  const [favorites, setFavorites] = useState([]);\n  // const [current, setCurrent] = useState({});\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const [state, dispatch] = useStore();\n\n  const { favCat } = state;\n\n  useEffect(() => {\n    const voteString = localStorage.getItem('LIKES');\n    if (!isEmpty(voteString)) {\n      const votes = voteString.split(',');\n      const favs = [];\n      votes.forEach((item) => {\n        if (item !== 'null') {\n          favs.push(item.trim());\n        }\n      });\n      setFavorites([...new Set(favs)]);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(favorites)) {\n      const currentCatId = favorites[currentIndex];\n      const params = {\n        has_breeds: true,\n      };\n      getFavCatAction(dispatch, currentCatId, params);\n    }\n  }, [currentIndex, dispatch, favorites]);\n\n  const navigateFavs = (event) => {\n    const { name } = event.target;\n    let newIdx = 0;\n    if (name === 'next') {\n      newIdx = currentIndex + 1;\n      if (newIdx === favorites.length) {\n        newIdx = 0;\n      }\n    } else if (name === 'prev') {\n      newIdx = currentIndex - 1;\n      if (newIdx < 0) {\n        newIdx = favorites.length - 1;\n      }\n    }\n    setCurrentIndex(newIdx);\n  };\n\n  return {\n    favorites,\n    setFavorites,\n    favCat,\n    navigateFavs,\n  };\n}\n\nexport {\n  FavCatHook,\n};\n","import { getFromApi } from '../../../utils/api';\n\nconst getFavCatAction = (dispatch, favID, params = {}) => {\n  const actionData = {\n    type: 'ADD_FAV_CATS',\n  };\n  getFromApi(`/images/${favID}`, dispatch, actionData, params);\n};\n\nexport {\n  getFavCatAction,\n};\n","import React from 'react';\nimport isEmpty from 'is-empty';\nimport { FavCatHook } from './FavsCustomHook';\nimport { CatComponent, Loader, ButtonComponent } from '../shared';\nimport { Container } from '../shared/StyledComponents';\n\nfunction FavsComponent() {\n  const {\n    favCat,\n    navigateFavs,\n  } = FavCatHook();\n\n  const display = { expand: false, body: true };\n  if (isEmpty(favCat)) {\n    return (<Loader msg=\"No favorites yet, swipe first\" />);\n  }\n\n  return (\n    <div>\n      <div style={{ fontSize: '20px', fontFamily: 'Heebo' }}>\n        <b>Here are your favorite Cat pics. Use the buttons to navigate!</b>\n      </div>\n\n      <Container style={{ flexDirection: 'row' }}>\n        <ButtonComponent message=\"PREVIOUS\" buttonType=\"primary\" size=\"lg\" onClickEvent={navigateFavs} name=\"prev\" />\n        <CatComponent image={favCat} display={display} width=\"70rem\" imgHeight=\"600px\" />\n        <ButtonComponent message=\"NEXT\" buttonType=\"primary\" size=\"lg\" onClickEvent={navigateFavs} name=\"next\" />\n      </Container>\n    </div>\n  );\n}\n\nexport { FavsComponent };\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nfunction NavigationBar() {\n  return (\n    <div style={{ justifyContent: 'space-evenly', width: '100%' }}>\n      <Navbar\n        className=\"bg-dark\"\n        expand=\"sm\"\n        fixed=\"sticky\"\n        variant=\"dark\"\n        style={{ display: 'grid', justifyContent: 'center', width: '100%' }}\n      >\n        <Navbar.Brand\n          as={Link}\n          to=\"/\"\n          style={{ fontSize: 'larger' }}\n        >\n          <img\n            alt=\"\"\n            src=\"public/cat.png\"\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n          />\n          SHARWIWI\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to=\"/home\">Home</Nav.Link>\n          <Nav.Link as={Link} to=\"/favs\">Favs</Nav.Link>\n          <Nav.Link as={Link} to=\"/search\">Search</Nav.Link>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport { NavigationBar };\n","import { getFromApi } from '../../../utils/api';\n\nconst getRandomCatsAction = (dispatch, params = {}) => {\n  const actionData = {\n    type: 'ADD_NEW_CATS',\n  };\n  getFromApi('/images/search', dispatch, actionData, params);\n};\n\nexport {\n  getRandomCatsAction,\n};\n","import { useState, useEffect } from 'react';\nimport isEmpty from 'is-empty';\nimport { useStore } from '../../store/store';\nimport { getRandomCatsAction } from './actions/HomeActions';\n\nconst CatsCustomHook = () => {\n  const [currentImage, setCurrentImage] = useState({});\n  const [state, dispatch] = useStore();\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [fetchBatch, setFetchBacth] = useState(false);\n\n  const { cats: allCatsData = [] } = state;\n\n  useEffect(() => {\n    const params = {\n      limit: 100,\n      format: 'json',\n      has_breeds: true,\n      mime_types: 'jpg,png',\n      size: 'med',\n    };\n    getRandomCatsAction(dispatch, params);\n  }, [dispatch, fetchBatch]);\n\n  const nextPhoto = () => {\n    if (currentImage) {\n      const nextIndex = currentImageIndex + 1;\n      if (nextIndex === allCatsData.length) {\n        setFetchBacth(true);\n      }\n      setCurrentImage(allCatsData[nextIndex]);\n      setCurrentImageIndex(nextIndex);\n    }\n  };\n\n  const recordVote = (event) => {\n    const action = event.target.name;\n    let VOTE_KEY;\n    if (action === 'like') {\n      VOTE_KEY = 'LIKES';\n    } else if (action === 'dislike') {\n      VOTE_KEY = 'DISLIKES';\n    }\n\n    const { id } = currentImage;\n\n    const voteString = `${localStorage.getItem(VOTE_KEY)}, ${id}`;\n\n    localStorage.setItem(VOTE_KEY, voteString);\n    nextPhoto();\n  };\n\n  if (isEmpty(currentImage) && !isEmpty(allCatsData)) {\n    setCurrentImage(allCatsData[0]);\n    setCurrentImageIndex(0);\n  }\n\n  return {\n    state,\n    allCatsData,\n    currentImage,\n    setCurrentImage,\n    recordVote,\n    currentImageIndex,\n  };\n};\n\nexport default CatsCustomHook;\n","import React from 'react';\nimport CatsCustomHook from './catsCustomHook';\nimport { ButtonComponent, CatComponent } from '../shared';\nimport { Container, ButtonContainer } from '../shared/StyledComponents';\n\nfunction HomeComponent() {\n  const {\n    currentImage,\n    recordVote,\n  } = CatsCustomHook();\n\n  const display = { expand: false, body: true };\n\n  return (\n    <Container\n      className=\"catWindow\"\n    >\n      <div style={{ fontSize: '20px', fontFamily: 'Heebo' }}>\n        You Like it? Click\n        {' '}\n        <b style={{ color: 'green' }}>Yap</b>\n        {' '}\n        to like, or\n        {' '}\n        <b style={{ color: 'red' }}>Nop</b>\n        {' '}\n        to dislike.\n      </div>\n      <CatComponent image={currentImage} display={display} width=\"60rem\" imgHeight=\"500px\" />\n      { !display.expand && (\n      <ButtonContainer>\n        <ButtonComponent message=\"Yap\" buttonType=\"success\" size=\"lg\" onClickEvent={recordVote} name=\"like\" />\n        <ButtonComponent message=\"Nop\" buttonType=\"danger\" size=\"lg\" onClickEvent={recordVote} name=\"dislike\" />\n      </ButtonContainer>\n      )}\n\n    </Container>\n  );\n}\n\nexport { HomeComponent };\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\n\n\n// Local Imports\nimport { SearchComponent } from './components/SearchComponent';\nimport { FavsComponent } from './components/FavsComponent';\nimport { NavigationBar } from './components/NavBarComponent';\nimport { HomeComponent } from './components/HomeComponent';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <ToastProvider placement=\"top-center\">\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <NavigationBar />\n          </header>\n          <div className=\"App-Body\">\n            <Switch>\n              <Route exact path=\"/\" component={HomeComponent} />\n              <Route path=\"/home\" component={HomeComponent} />\n              <Route path=\"/favs\" component={FavsComponent} />\n              <Route path=\"/search\" component={SearchComponent} />\n            </Switch>\n          </div>\n        </div>\n      </ToastProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { StateProvider } from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst AppContainer = (\n  <StateProvider>\n    <App />\n  </StateProvider>\n);\n\nReactDOM.render(AppContainer, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}